---
description: 
globs: 
alwaysApply: true
---
Keep in mind that this tool is meant to dogfood itself.

Klep already has a task-runner. Please put new tasks in the [klep.tasks](mdc:kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/klep.tasks) file. Do not ever add scripts to [package.json](mdc:kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/kleptool-package-manager/package.json) :thumbsup:
Complicated strings of shell commands should be created as a shell script and saved under `scripts` in the root of the project directory.

Also, I'm currently using Bun for our TypeScript dependency manager

Style Guide:
- Functional over object-oriented.
- Prefer smaller, single purpose functions that avoid side effects where possible
- Prefer never-nester style coding
- When throwing errors, throw kerror() of the appropriate type instead of a generic Error in TypeScript
- Prefer smaller files. No more than about 300 lines if possible.