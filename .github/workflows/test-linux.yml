name: Test (Linux)

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]
    # This will run on any PR targeting dev, regardless of source branch name

env:
  CARGO_TERM_COLOR: always

jobs:
  # Job to run coverage on base branch (dev) and upload artifacts
  base_coverage:
    name: Base Coverage (dev)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout base branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.base_ref }}

    - name: Setup Klep Dependencies
      uses: ./.github/actions/setup-klep

    - name: Build Project
      run: klep ci:build

    - name: Cache Cargo Tarpaulin
      id: cache-cargo-tarpaulin-base
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/cargo-tarpaulin
          ~/.cargo/.crates.toml
          ~/.cargo/.crates2.json
        key: ${{ runner.os }}-cargo-tarpaulin-v0.32.7
        restore-keys: |
          ${{ runner.os }}-cargo-tarpaulin-

    - name: Install cargo-tarpaulin
      if: steps.cache-cargo-tarpaulin-base.outputs.cache-hit != 'true'
      run: cargo install cargo-tarpaulin

    - name: Generate Base Coverage
      run: klep coverage

    - name: Upload TypeScript base coverage
      uses: actions/upload-artifact@v4
      with:
        name: base-typescript-lcov
        path: ./coverage/typescript/lcov.info

    - name: Upload Rust base coverage
      uses: actions/upload-artifact@v4
      with:
        name: base-rust-lcov
        path: ./coverage/rust/lcov.info

  test-linux:
    name: Test (Linux)
    runs-on: ubuntu-latest
    needs: [base_coverage]
    if: always() && (needs.base_coverage.result == 'success' || needs.base_coverage.result == 'skipped')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Klep Dependencies
      uses: ./.github/actions/setup-klep

    - name: Build Project
      run: klep ci:build

    - name: Cache Cargo Tarpaulin
      id: cache-cargo-tarpaulin
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/cargo-tarpaulin
          ~/.cargo/.crates.toml
          ~/.cargo/.crates2.json
        key: ${{ runner.os }}-cargo-tarpaulin-v0.32.7
        restore-keys: |
          ${{ runner.os }}-cargo-tarpaulin-

    - name: Install cargo-tarpaulin
      if: steps.cache-cargo-tarpaulin.outputs.cache-hit != 'true'
      run: cargo install cargo-tarpaulin

    - name: Test and Generate Coverage
      run: klep coverage

    - name: Coverage Summary
      run: ./scripts/coverage-summary.sh

    # Download base coverage for PR comparison
    - name: Download TypeScript base coverage
      if: github.event_name == 'pull_request'
      uses: actions/download-artifact@v4
      with:
        name: base-typescript-lcov
        path: ./base-coverage/typescript/

    - name: Download Rust base coverage
      if: github.event_name == 'pull_request'
      uses: actions/download-artifact@v4
      with:
        name: base-rust-lcov
        path: ./base-coverage/rust/

    # TypeScript Coverage Report with Barecheck
    - name: Generate TypeScript Coverage Report
      if: github.event_name == 'pull_request'
      uses: barecheck/code-coverage-action@v1
      with:
        lcov-file: "./coverage/typescript/lcov.info"
        base-lcov-file: "./base-coverage/typescript/lcov.info"
        minimum-ratio: 0
        send-summary-comment: true
        show-annotations: "warning"
        app-name: "TypeScript"

    # Rust Coverage Report with Barecheck  
    - name: Generate Rust Coverage Report
      if: github.event_name == 'pull_request'
      uses: barecheck/code-coverage-action@v1
      with:
        lcov-file: "./coverage/rust/lcov.info"
        base-lcov-file: "./base-coverage/rust/lcov.info"
        minimum-ratio: 0
        send-summary-comment: true
        show-annotations: "warning"
        app-name: "Rust"
