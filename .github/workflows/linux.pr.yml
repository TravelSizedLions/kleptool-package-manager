name: Test (Linux + Coverage)

on:
  pull_request:
    branches: [ dev ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-linux:
    name: Test (Linux)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Klep Dependencies
      uses: ./.github/actions/setup-klep

    - name: Setup Additional Cargo Crates
      uses: ./.github/actions/setup-cargo-crates
      with:
        cargo-crates: cargo-tarpaulin

    - name: Build Project
      run: klep ci:build

    - name: Test and Generate Coverage
      run: klep coverage

    - name: Download TypeScript Base Coverage from dev
      uses: dawidd6/action-download-artifact@v3
      continue-on-error: true
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        workflow: linux.dev.yml
        branch: dev
        name: dev-typescript-coverage
        path: ./base-coverage/typescript/
        if_no_artifact_found: warn

    - name: Download Rust Base Coverage from dev
      uses: dawidd6/action-download-artifact@v3
      continue-on-error: true
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        workflow: linux.dev.yml
        branch: dev
        name: dev-rust-coverage
        path: ./base-coverage/rust/
        if_no_artifact_found: warn

    - name: Check if TypeScript base coverage exists
      id: check-ts-base
      run: |
        if [ -f "./base-coverage/typescript/lcov.info" ]; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Check if Rust base coverage exists
      id: check-rust-base
      run: |
        if [ -f "./base-coverage/rust/lcov.info" ]; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Generate TypeScript Coverage Report (with baseline)
      if: steps.check-ts-base.outputs.exists == 'true'
      uses: barecheck/code-coverage-action@v1
      with:
        lcov-file: "./coverage/typescript/lcov.info"
        base-lcov-file: "./base-coverage/typescript/lcov.info"
        minimum-ratio: 0
        send-summary-comment: true
        show-annotations: "warning"
        app-name: "TypeScript"

    - name: Generate TypeScript Coverage Report (no baseline)
      if: steps.check-ts-base.outputs.exists == 'false'
      uses: barecheck/code-coverage-action@v1
      with:
        lcov-file: "./coverage/typescript/lcov.info"
        minimum-ratio: 0
        send-summary-comment: true
        show-annotations: "warning"
        app-name: "TypeScript (No Baseline)"

    - name: Generate Rust Coverage Report (with baseline)
      if: steps.check-rust-base.outputs.exists == 'true'
      uses: barecheck/code-coverage-action@v1
      with:
        lcov-file: "./coverage/rust/lcov.info"
        base-lcov-file: "./base-coverage/rust/lcov.info"
        minimum-ratio: 0
        send-summary-comment: true
        show-annotations: "warning"
        app-name: "Rust"

    - name: Generate Rust Coverage Report (no baseline)
      if: steps.check-rust-base.outputs.exists == 'false'
      uses: barecheck/code-coverage-action@v1
      with:
        lcov-file: "./coverage/rust/lcov.info"
        minimum-ratio: 0
        send-summary-comment: true
        show-annotations: "warning"
        app-name: "Rust (No Baseline)"
